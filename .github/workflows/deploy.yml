name: Deploy FastQCLI to Server

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      server_environment:
        description: 'Server environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
        - development

jobs:
  test:
    name: Test FastQCLI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_exe.txt
    
    - name: Test Installation
      run: |
        python -c "import sequali; print('Sequali OK')"
        python -c "import streamlit; print('Streamlit OK')"
        python -c "import fastqcli; print('FastQCLI OK')"
    
    - name: Run Unit Tests
      run: |
        python -m pytest tests/ -v || echo "No tests found or tests failed"
  
  deploy:
    name: Deploy to Server
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Make deployment script executable
      run: chmod +x scripts/deploy_server.sh
    
    - name: Deploy to Production Server
      if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.server_environment == 'production')
      run: |
        echo "Deploying to production server..."
        ./scripts/deploy_server.sh
      env:
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_PATH: ${{ secrets.SERVER_PATH }}
        SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
    
    - name: Deploy to Staging Server
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.server_environment == 'staging'
      run: |
        echo "Deploying to staging server..."
        # Staging deployment commands
        echo "Staging deployment not yet configured"
    
    - name: Deploy to Development Server
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.server_environment == 'development'
      run: |
        echo "Deploying to development server..."
        # Development deployment commands
        echo "Development deployment not yet configured"
    
    - name: Create Release
      if: github.event_name == 'push' && contains(github.ref, 'tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false