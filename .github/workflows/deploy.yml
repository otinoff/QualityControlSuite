name: Deploy to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest tests/ || echo "No tests found, skipping"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # Проверка и создание директории проекта
          PROJECT_DIR="/var/QualityControlSuite"
          
          # Сохранение конфигурации (если есть)
          if [ -d "$PROJECT_DIR" ] && [ -f "$PROJECT_DIR/config/local_settings.yaml" ]; then
            cp $PROJECT_DIR/config/local_settings.yaml /tmp/qc_local_settings.yaml
          fi
          
          # Проверка существования директории и попытка обновления
          if [ -d "$PROJECT_DIR/.git" ]; then
            echo "Repository exists, attempting to update..."
            cd $PROJECT_DIR
            
            # Попытка обновить через git
            if sudo git fetch origin && sudo git reset --hard origin/main; then
              echo "Successfully updated via git pull"
            else
              echo "Git update failed, re-cloning repository..."
              cd /
              sudo rm -rf $PROJECT_DIR
              sudo git clone https://github.com/otinoff/QualityControlSuite.git $PROJECT_DIR
              cd $PROJECT_DIR
            fi
          else
            # Если директории нет или это не git репозиторий - клонируем
            echo "Directory doesn't exist or not a git repo, cloning..."
            sudo rm -rf $PROJECT_DIR
            sudo git clone https://github.com/otinoff/QualityControlSuite.git $PROJECT_DIR
            cd $PROJECT_DIR
          fi
          
          # Убеждаемся что мы на main ветке
          sudo git checkout main
          
          # Восстановление локальной конфигурации
          if [ -f /tmp/qc_local_settings.yaml ]; then
            cp /tmp/qc_local_settings.yaml config/local_settings.yaml
            rm /tmp/qc_local_settings.yaml
          fi
          
          # Обновление зависимостей в виртуальном окружении
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Установка владельца и прав доступа
          sudo chown -R www-data:www-data $PROJECT_DIR
          sudo chmod +x $PROJECT_DIR/main.py
          sudo chmod -R 755 $PROJECT_DIR
          
          # Перезапуск сервиса (если используется systemd)
          sudo systemctl restart qualitycontrolsuite || echo "Service not configured yet"
          
          # Проверка nginx конфигурации
          sudo nginx -t && sudo systemctl reload nginx || echo "Nginx not configured yet"
          
          echo "Deployment completed successfully!"